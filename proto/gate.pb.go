// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: gate.proto

package tinygate

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//define node status
type NodeStatus int32

const (
	NodeStatus_NODE_DOWN     NodeStatus = 0
	NodeStatus_NODE_UP       NodeStatus = 1
	NodeStatus_NODE_MAINTAIN NodeStatus = 2
	NodeStatus_NODE_ACTIVE   NodeStatus = 3
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "NODE_DOWN",
		1: "NODE_UP",
		2: "NODE_MAINTAIN",
		3: "NODE_ACTIVE",
	}
	NodeStatus_value = map[string]int32{
		"NODE_DOWN":     0,
		"NODE_UP":       1,
		"NODE_MAINTAIN": 2,
		"NODE_ACTIVE":   3,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gate_proto_enumTypes[0].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_gate_proto_enumTypes[0]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{0}
}

//auth info
type AccessAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App   string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AccessAuth) Reset() {
	*x = AccessAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessAuth) ProtoMessage() {}

func (x *AccessAuth) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessAuth.ProtoReflect.Descriptor instead.
func (*AccessAuth) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{0}
}

func (x *AccessAuth) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *AccessAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

//byte message data
type ByteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`         //service kind
	MessageId uint32   `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"`    //message id
	Data      []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`               //byte data
	Address   string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`         //assigned address, option field
	ConnIds   []uint32 `protobuf:"varint,5,rep,packed,name=connIds,proto3" json:"connIds,omitempty"` //tcp,ws connect ids, option field
}

func (x *ByteMessage) Reset() {
	*x = ByteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteMessage) ProtoMessage() {}

func (x *ByteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteMessage.ProtoReflect.Descriptor instead.
func (*ByteMessage) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{1}
}

func (x *ByteMessage) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ByteMessage) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *ByteMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ByteMessage) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ByteMessage) GetConnIds() []uint32 {
	if x != nil {
		return x.ConnIds
	}
	return nil
}

//general request
type GateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string      `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`      //service kind
	MessageId uint32      `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"` //message id
	Data      []byte      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`            //byte data
	Address   string      `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`      //assigned address, option field
	IsAsync   bool        `protobuf:"varint,5,opt,name=isAsync,proto3" json:"isAsync,omitempty"`     //async mode switcher, option field
	Auth      *AccessAuth `protobuf:"bytes,6,opt,name=auth,proto3" json:"auth,omitempty"`            //access auth, option field
}

func (x *GateReq) Reset() {
	*x = GateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateReq) ProtoMessage() {}

func (x *GateReq) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateReq.ProtoReflect.Descriptor instead.
func (*GateReq) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{2}
}

func (x *GateReq) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GateReq) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *GateReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GateReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GateReq) GetIsAsync() bool {
	if x != nil {
		return x.IsAsync
	}
	return false
}

func (x *GateReq) GetAuth() *AccessAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

//general response
type GateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service      string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`      //service kind
	MessageId    uint32 `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"` //message id
	Data         []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`            //byte data
	ErrorCode    int32  `protobuf:"varint,4,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMessage string `protobuf:"bytes,5,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *GateResp) Reset() {
	*x = GateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateResp) ProtoMessage() {}

func (x *GateResp) ProtoReflect() protoreflect.Message {
	mi := &file_gate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateResp.ProtoReflect.Descriptor instead.
func (*GateResp) Descriptor() ([]byte, []int) {
	return file_gate_proto_rawDescGZIP(), []int{3}
}

func (x *GateResp) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GateResp) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *GateResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GateResp) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GateResp) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_gate_proto protoreflect.FileDescriptor

var file_gate_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x61,
	0x74, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x0b, 0x42, 0x79, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xaf, 0x01, 0x0a,
	0x07, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x24, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x98,
	0x01, 0x0a, 0x08, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x4c, 0x0a, 0x0a, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x44, 0x45, 0x5f,
	0x44, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x55,
	0x50, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x41, 0x49, 0x4e,
	0x54, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x32, 0x6e, 0x0a, 0x0b, 0x47, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x27,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x2b, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x74,
	0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x64, 0x79, 0x7a, 0x68, 0x6f, 0x75, 0x2f, 0x74, 0x69, 0x6e, 0x79,
	0x67, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gate_proto_rawDescOnce sync.Once
	file_gate_proto_rawDescData = file_gate_proto_rawDesc
)

func file_gate_proto_rawDescGZIP() []byte {
	file_gate_proto_rawDescOnce.Do(func() {
		file_gate_proto_rawDescData = protoimpl.X.CompressGZIP(file_gate_proto_rawDescData)
	})
	return file_gate_proto_rawDescData
}

var file_gate_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gate_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_gate_proto_goTypes = []interface{}{
	(NodeStatus)(0),     // 0: gate.NodeStatus
	(*AccessAuth)(nil),  // 1: gate.AccessAuth
	(*ByteMessage)(nil), // 2: gate.ByteMessage
	(*GateReq)(nil),     // 3: gate.GateReq
	(*GateResp)(nil),    // 4: gate.GateResp
}
var file_gate_proto_depIdxs = []int32{
	1, // 0: gate.GateReq.auth:type_name -> gate.AccessAuth
	2, // 1: gate.GateService.BindStream:input_type -> gate.ByteMessage
	3, // 2: gate.GateService.GenReq:input_type -> gate.GateReq
	2, // 3: gate.GateService.BindStream:output_type -> gate.ByteMessage
	4, // 4: gate.GateService.GenReq:output_type -> gate.GateResp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gate_proto_init() }
func file_gate_proto_init() {
	if File_gate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gate_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gate_proto_goTypes,
		DependencyIndexes: file_gate_proto_depIdxs,
		EnumInfos:         file_gate_proto_enumTypes,
		MessageInfos:      file_gate_proto_msgTypes,
	}.Build()
	File_gate_proto = out.File
	file_gate_proto_rawDesc = nil
	file_gate_proto_goTypes = nil
	file_gate_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GateServiceClient is the client API for GateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GateServiceClient interface {
	//stream mode
	//cast or receive data between gate and target service
	BindStream(ctx context.Context, opts ...grpc.CallOption) (GateService_BindStreamClient, error)
	//general mode
	GenReq(ctx context.Context, in *GateReq, opts ...grpc.CallOption) (*GateResp, error)
}

type gateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGateServiceClient(cc grpc.ClientConnInterface) GateServiceClient {
	return &gateServiceClient{cc}
}

func (c *gateServiceClient) BindStream(ctx context.Context, opts ...grpc.CallOption) (GateService_BindStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GateService_serviceDesc.Streams[0], "/gate.GateService/BindStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gateServiceBindStreamClient{stream}
	return x, nil
}

type GateService_BindStreamClient interface {
	Send(*ByteMessage) error
	Recv() (*ByteMessage, error)
	grpc.ClientStream
}

type gateServiceBindStreamClient struct {
	grpc.ClientStream
}

func (x *gateServiceBindStreamClient) Send(m *ByteMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gateServiceBindStreamClient) Recv() (*ByteMessage, error) {
	m := new(ByteMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gateServiceClient) GenReq(ctx context.Context, in *GateReq, opts ...grpc.CallOption) (*GateResp, error) {
	out := new(GateResp)
	err := c.cc.Invoke(ctx, "/gate.GateService/GenReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GateServiceServer is the server API for GateService service.
type GateServiceServer interface {
	//stream mode
	//cast or receive data between gate and target service
	BindStream(GateService_BindStreamServer) error
	//general mode
	GenReq(context.Context, *GateReq) (*GateResp, error)
}

// UnimplementedGateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGateServiceServer struct {
}

func (*UnimplementedGateServiceServer) BindStream(GateService_BindStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method BindStream not implemented")
}
func (*UnimplementedGateServiceServer) GenReq(context.Context, *GateReq) (*GateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenReq not implemented")
}

func RegisterGateServiceServer(s *grpc.Server, srv GateServiceServer) {
	s.RegisterService(&_GateService_serviceDesc, srv)
}

func _GateService_BindStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GateServiceServer).BindStream(&gateServiceBindStreamServer{stream})
}

type GateService_BindStreamServer interface {
	Send(*ByteMessage) error
	Recv() (*ByteMessage, error)
	grpc.ServerStream
}

type gateServiceBindStreamServer struct {
	grpc.ServerStream
}

func (x *gateServiceBindStreamServer) Send(m *ByteMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gateServiceBindStreamServer) Recv() (*ByteMessage, error) {
	m := new(ByteMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GateService_GenReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GateServiceServer).GenReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gate.GateService/GenReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GateServiceServer).GenReq(ctx, req.(*GateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gate.GateService",
	HandlerType: (*GateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenReq",
			Handler:    _GateService_GenReq_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BindStream",
			Handler:       _GateService_BindStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gate.proto",
}
